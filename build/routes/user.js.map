{"version":3,"sources":["../../server/routes/user.js"],"names":["userRouter","mergeParams","use","bodyParser","json","get","getUser","req","res","next","email","console","log","scope","api","getOne","then","response","length","status","error","message","user","uid","username","userlast","verified","orders","credit","gender","bday","membership","language","rest","free_pizza","Object","assign","locations","forEach","mobile","ent","name","location","city","admin","door","floor","bell","id","entry","prime","c_status","push","catch","err","post","data","body","Number","params","updateOne","getLan","lan","getFac","facs","results","street","number","open","checkin","sat_open","sat_close","sun_open","sun_close","vacation_end","vacation_start","delivery","bottleneck","st","JSON","parse","products","map","product","list","local_promo","local_price","on_hand","take_only","add_time","errors","saveOne"],"mappings":"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","file":"user.js","sourcesContent":["import express from 'express'\nimport bodyParser from 'body-parser'\n//import api from '../api/user'\nimport api from '../api/user'\nimport { getUser,getUserId,getLan } from '../middleware/'\n\nlet userRouter = express({\n  mergeParams: true\n})\n\nuserRouter.use(bodyParser.json())\n\n// get user data: location, user\nuserRouter.get('/', getUser, (req,res,next) => {\n  const { email } = req\n  //let usr = {}\n    console.log('userInit(): userRouter.get /user/',req.email)\n  const scope = [\n    'uid','username','userlast','verified','orders','credit',\n    'gender','bday','membership','language','status'\n  ]\n  api.getOne({ email },'user',scope)\n  .then( response => {\n    if(response.length === 0) return res.status(401).json({error: {message: 'User Not Found'}})\n\n    let user = {}\n    const {\n      uid,username,userlast,verified,orders,credit,\n      gender,bday,membership,language,status,...rest\n    } = response[0]\n    let free_pizza = orders>0 && orders%5===0\n    user = Object.assign({},{\n      uid,username,userlast,verified,orders,credit,\n      gender,bday,membership,language,status\n    },{free_pizza: free_pizza})\n\n    if(response.length > 1){\n      user.locations =[]\n      response.forEach( ent => {\n        const {mobile,name,location,city,admin,door,floor,bell,id,entry,prime,c_status} = ent\n        if(c_status === 4){\n          user.locations.push({mobile,name,location,city,admin,door,floor,bell,id,entry,prime}\n        )}\n      })\n    } else {\n      if( rest.id !== null ){\n        user.locations =[]\n        user.locations.push(rest)\n      }\n    }\n    //console.log(user)\n    res.status(200).json({user})\n  })\n  .catch(err => res.status(500).json({ error: { message: err }}))\n})\n// UPDATE FAC: state\nuserRouter.post('/fac/:id', (req,res,next) => {\n  const { data } = req.body\n  data.id = Number(req.params.id)\n  api.updateOne(data,'fac')\n  .then( () => {\n    res.status(200).json({})\n  })\n  .catch( err => res.status(500).json({ error: { message: err }}))\n})\n\n\n// GET FAC for users location\nuserRouter.post('/facs', getLan, (req,res,next) => {\n  const { lan } = req\n  const { id } = req.body\n  api.getFac(id)\n  .then( results => {\n    let facs = {}\n    const {id,uid,city,name,street,number,prime,open,checkin,\n      sat_open,sat_close,sun_open,\n      sun_close,vacation_end,vacation_start,\n      delivery,bottleneck,mobile} = results[0]\n    const st = JSON.parse(street)[lan]\n    let products = results.map( entry => {\n      const {product,list,local_promo,local_price,on_hand,take_only,add_time} = entry\n      return {product,list,local_promo,local_price,on_hand,take_only,add_time}\n      //if(open){\n        //facs = { ...facs, [city]: facs[city]?\n        //  {...facs[city],\n        //    city, prime, open, fac, delivery, bottleneck, mobile,\n        //    products: facs[city].products? [...facs[city].products, rest] : [rest]\n        //  } :\n        //  { city, prime, open, fac, products: [rest]} }\n        //facs.push()\n      //} else {\n      //  facs = { ...facs, [location]: {open: 0}}\n      //}\n    })\n    facs = Object.assign({id,uid,city,name,number,prime,open,checkin,\n      sat_open,sat_close,sun_open,\n      sun_close,vacation_end,vacation_start,\n      delivery,bottleneck,mobile},{products:products, street: st})\n    res.status(200).json(facs)\n  })\n  .catch( err => console.log(err.message))\n})\n\n// update users location: location details\nuserRouter.post('/location/:id', (req,res,next) => {\n  const { data } = req.body\n  console.log('User Router: ',data)\n  data.id = Number(req.params.id)\n  api.updateOne(data,'user_location')\n  .then( () => res.status(200).json({message: 'Location saved!'}))\n  .catch( err => res.status(500).json({errors: {message: 'Something went wrong'}}))\n})\n\n// insert new user location\nuserRouter.post('/location', getUser, (req,res,next) => {// or getUserId\n  const {data} = req.body\n  data.uid = req.uid\n  api.saveOne(data,'user_location')\n  .then( id => res.status(200).json({id: id}))\n  .catch( err => res.status(500).json({errors: {message: 'Something went wrong'}}))\n})\n\nexport default userRouter\n"]}