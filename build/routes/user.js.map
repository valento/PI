{"version":3,"sources":["../../server/routes/user.js"],"names":["userRouter","mergeParams","use","bodyParser","json","get","getUser","req","res","next","email","console","log","scope","api","getOne","then","response","length","status","error","message","user","uid","username","userlast","verified","orders","credit","gender","bday","membership","language","rest","Object","assign","locations","forEach","mobile","ent","name","location","city","admin","door","floor","bell","id","entry","prime","c_status","push","catch","err","post","data","body","Number","params","updateOne","getLan","lan","getFac","facs","results","baker","street","number","open","checkin","day_open","day_close","noon_open","noon_close","sat_open","sat_close","sun_open","sun_close","vacation_end","vacation_start","delivery","bottleneck","order_estimated","st","JSON","parse","products","map","product","list","local_promo","local_price","on_hand","take_only","add_time","errors","saveOne"],"mappings":"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","file":"user.js","sourcesContent":["import express from 'express'\nimport bodyParser from 'body-parser'\n//import api from '../api/user'\nimport api from '../api/user'\nimport { getUser,getUserId,getLan } from '../middleware/'\n\nlet userRouter = express({\n  mergeParams: true\n})\n\nuserRouter.use(bodyParser.json())\n\n// get user data: location, user\nuserRouter.get('/', getUser, (req,res,next) => {\n  const { email } = req\n  //let usr = {}\n    console.log('userInit(): userRouter.get /user/',req.email)\n  const scope = [\n    'uid','username','userlast','verified','orders','credit',\n    'gender','bday','membership','language','status'\n  ]\n  api.getOne({ email },'user',scope)\n  .then( response => {\n    if(response.length === 0) return res.status(401).json({error: {message: 'User Not Found'}})\n\n    let user = {}\n    const {\n      uid,username,userlast,verified,orders,credit,\n      gender,bday,membership,language,status,...rest\n    } = response[0]\n    //let free_pizza = orders===0 || orders%5===0\n    user = Object.assign({},{\n      uid,username,userlast,verified,orders,credit,\n      gender,bday,membership,language,status\n    })//,{free_pizza: free_pizza})\n\n    if(response.length > 1){\n      user.locations =[]\n      response.forEach( ent => {\n        const {mobile,name,location,city,admin,door,floor,bell,id,entry,prime,c_status} = ent\n        if(c_status === 4){\n          user.locations.push({mobile,name,location,city,admin,door,floor,bell,id,entry,prime}\n        )}\n      })\n    } else {\n      if( rest.id !== null ){\n        user.locations =[]\n        user.locations.push(rest)\n      }\n    }\n    //console.log(user)\n    res.status(200).json({user})\n  })\n  .catch(err => res.status(500).json({ error: { message: err }}))\n})\n// UPDATE FAC: state\nuserRouter.post('/fac/:id', (req,res,next) => {\n  const { data } = req.body\n  data.id = Number(req.params.id)\n  api.updateOne(data,'fac')\n  .then( () => {\n    res.status(200).json({})\n  })\n  .catch( err => res.status(500).json({ error: { message: err }}))\n})\n\n\n// GET FAC for users location\nuserRouter.post('/facs', getLan, (req,res,next) => {\n  const { lan } = req\n  const { id } = req.body\n  api.getFac(id)\n  .then( results => {\n    let facs = {}\n    const {id,uid,baker,city,name,street,number,prime,open,checkin,\n      day_open,day_close,noon_open,noon_close,sat_open,sat_close,sun_open,sun_close,\n      vacation_end,vacation_start,\n      delivery,bottleneck,order_estimated,mobile} = results[0]\n    const st = JSON.parse(street)[lan]\n    let products = results.map( entry => {\n      const {product,list,local_promo,local_price,on_hand,take_only,add_time} = entry\n      return {product,list,local_promo,local_price,on_hand,take_only,add_time}\n      //if(open){\n        //facs = { ...facs, [city]: facs[city]?\n        //  {...facs[city],\n        //    city, prime, open, fac, delivery, bottleneck, mobile,\n        //    products: facs[city].products? [...facs[city].products, rest] : [rest]\n        //  } :\n        //  { city, prime, open, fac, products: [rest]} }\n        //facs.push()\n      //} else {\n      //  facs = { ...facs, [location]: {open: 0}}\n      //}\n    })\n    facs = Object.assign({id,uid,baker,city,name,number,prime,open,checkin,\n      day_open,day_close,noon_open,noon_close,sat_open,sat_close,sun_open,sun_close,\n      vacation_end,vacation_start,\n      delivery,bottleneck,order_estimated,mobile},{products:products, street: st})\n    res.status(200).json(facs)\n  })\n  .catch( err => console.log(err.message))\n})\n\n// update users location: location details\nuserRouter.post('/location/:id', (req,res,next) => {\n  const { data } = req.body\n  console.log('User Router: ',data)\n  data.id = Number(req.params.id)\n  api.updateOne(data,'user_location')\n  .then( () => res.status(200).json({message: 'Location saved!'}))\n  .catch( err => res.status(500).json({errors: {message: 'Something went wrong'}}))\n})\n\n// insert new user location\nuserRouter.post('/location', getUser, (req,res,next) => {// or getUserId\n  const {data} = req.body\n  data.uid = req.uid\n  api.saveOne(data,'user_location')\n  .then( id => res.status(200).json({id: id}))\n  .catch( err => res.status(500).json({errors: {message: 'Something went wrong'}}))\n})\n\nexport default userRouter\n"]}