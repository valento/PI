{"version":3,"sources":["../../server/routes/user.js"],"names":["userRouter","mergeParams","use","bodyParser","json","get","getUser","req","res","next","console","log","email","scope","api","getOne","then","user","response","uid","username","userlast","verified","orders","credit","gender","bday","membership","language","status","rest","Object","assign","length","locations","forEach","mobile","ent","name","location","city","admin","door","floor","bell","id","entry","prime","c_status","push","catch","errors","message","err","post","ids","body","getAllFac","facs","results","fac","open","delivery","bottleneck","products","data","Number","params","updateOne","getUserId","saveOne"],"mappings":"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","file":"user.js","sourcesContent":["import express from 'express'\nimport bodyParser from 'body-parser'\n//import api from '../api/user'\nimport api from '../api/user'\nimport { getUser,getUserId } from '../middleware/'\n\nlet userRouter = express({\n  mergeParams: true\n})\n\nuserRouter.use(bodyParser.json())\n\nuserRouter.get('/', getUser, (req,res,next) => {\n  console.log('userInit(): userRouter.get /user/',req.email)\n  const {email} = req\n  const scope = ['uid','username','userlast','verified', 'orders','credit','gender','bday','membership','language','status']\n  api.getOne({email},'user',scope)\n  .then( response => {\n    let user = {}\n    const {uid,username,userlast,verified,orders,credit,gender,bday,membership,language,status,...rest} = response[0]\n    user = Object.assign({},{uid,username,userlast,verified,orders,credit,gender,bday,membership,language,status})\n    if(response.length > 1){\n      user.locations =[]\n      response.forEach( ent => {\n        const {mobile,name,location,city,admin,door,floor,bell,id,entry,prime,c_status} = ent\n        if(c_status === 4){ user.locations.push({mobile,name,location,city,admin,door,floor,bell,id,entry,prime}) }\n      })\n    } else {\n      if( rest.id !== null ){\n        user.locations =[]\n        user.locations.push(rest)\n      }\n    }\n    //console.log(user)\n    res.status(200).json({user})\n  })\n  .catch(err => res.status(500).json({errors: {message:err}}))\n})\n\n// GET ALL FACs for All user.locations\nuserRouter.post('/facs', (req,res,next) => {\n  const { ids } = req.body\n  api.getAllFac(ids)\n  .then( results => {\n    let facs = []\n    results.forEach( entry => {\n      const {fac,city,prime,open,delivery,bottleneck,mobile,...rest} = entry\n      //if(open){\n        facs = { ...facs, [city]: facs[city]?\n          {...facs[city],\n            city, prime, open, fac, delivery, bottleneck, mobile,\n            products: facs[city].products? [...facs[city].products, rest] : [rest]\n          } :\n          { city, prime, open, fac, products: [rest]} }\n\n        //facs.push()\n      //} else {\n      //  facs = { ...facs, [location]: {open: 0}}\n      //}\n    })\n    res.status(200).json(facs)\n  })\n  .catch( err => console.log(err.message))\n})\n\nuserRouter.post('/location/:id', (req,res,next) => {\n  const {data} = req.body\n  console.log('User Router: ',data)\n  data.id = Number(req.params.id)\n  api.updateOne(data,'user_location')\n  .then( () => res.status(200).json({message: 'Location saved!'}))\n  .catch( err => res.status(500).json({errors: {message: 'Something went wrong'}}))\n})\n\nuserRouter.post('/location', getUserId, (req,res,next) => {\n  const {data} = req.body\n  data.uid = req.uid\n  api.saveOne(data,'user_location')\n  .then( id => res.status(200).json({id: id}))\n  .catch( err => res.status(500).json({errors: {message: 'Something went wrong'}}))\n})\n\nexport default userRouter\n"]}